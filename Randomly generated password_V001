"""
The following code provides a simple and flexible way to generate and manage passwords, and enhances the security of passwords through password strength check and user selection.
Users can customize the password according to their own needs, and choose to copy it to the clipboard, save it to a file, and check the password strength.
"""

import random
import string

def generate_password(length, use_lowercase=True, use_uppercase=True, use_digits=True, use_symbols=True):
    characters = ""
    if use_lowercase:
        characters += string.ascii_lowercase
    if use_uppercase:
        characters += string.ascii_uppercase
    if use_digits:
        characters += string.digits
    if use_symbols:
        characters += "!@#$%^&*()?"

    if not characters:
        print("请至少选择一个字符集。")
        return None

    password = ''.join(random.choices(characters, k=length))
    return password

def check_password_strength(password):
    # 简单示例，实际情况可能需要更复杂的逻辑
    if len(password) >= 8 and any(char.isdigit() for char in password):
        return "强密码"
    else:
        return "密码较弱"

def main():
    try:
        passlen = int(input("输入密码的长度: "))

        use_lowercase = input("是否包含小写字母？ (y/n): ").lower() == 'y'
        use_uppercase = input("是否包含大写字母？ (y/n): ").lower() == 'y'
        use_digits = input("是否包含数字？ (y/n): ").lower() == 'y'
        use_symbols = input("是否包含特殊字符？ (y/n): ").lower() == 'y'

        generated_password = generate_password(passlen, use_lowercase, use_uppercase, use_digits, use_symbols)

        if generated_password:
            print("生成的密码是:", generated_password)

            # 复制密码到剪贴板
            try:
                import pyperclip
                pyperclip.copy(generated_password)
                print("密码已自动复制到剪贴板")
            except ImportError:
                print("未安装 pyperclip 模块，无法复制到剪贴板")

            # 保存密码到文件
            save_password = input("是否保存密码到文件？ (y/n): ").lower() == 'y'
            if save_password:
                with open('passwords.txt', 'a') as file:
                    file.write(generated_password + '\n')
                print("密码已保存到当前python文件路径 passwords.txt 文件中")

            # 检查密码强度
            strength = check_password_strength(generated_password)
            print("当前密码强度:", strength)

    except ValueError:
        print("请输入有效的数字作为密码长度。")

if __name__ == "__main__":
    main()
